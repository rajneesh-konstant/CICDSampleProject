name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Run tests (assuming Jest is configured)
      - name: Run Tests
        run: npm test

      # Cache dependencies to speed up builds
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  build-android:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build Android App
        run: |
          cd android
          ./gradlew clean
          ./gradlew bundleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: android/app/build/outputs/bundle/release/

  build-ios:
    needs: build-and-test
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Install CocoaPods
        run: pod install --project-directory=ios

      - name: Build iOS App
        run: |
          cd ios
          xcodebuild -scheme MyReactNativeApp -configuration Release -sdk iphoneos -archivePath build/MyReactNativeApp.xcarchive archive
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: ios/build/